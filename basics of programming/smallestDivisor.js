/* Реализуйте функцию, используя итеративный процесс.
Функция должна находить наименьший делитель заданного числа. Число, передаваемое в функцию, больше нуля.

Доп. условие: делитель должен быть больше единицы, за исключением случая, когда аргументом является единица (наименьшим делителем которой является также единица).

Например, наименьший делитель числа 15 это 3.*/

const smallestDivisor = (num) => {
  const iter = (acc) => {
    if (acc > num / 2) {
      return num
    } 
    
    if (num % acc === 0) {
      return acc;
    }
    return iter(acc + 1);
  };

  return iter(2);
};

/* Напишите функцию smallestDivisor. Она должна находить наименьший целый делитель числа.
Поведение у функции такое же, но реализация (код функции) должна быть другой.
На этот раз реализуйте императивный итеративный процесс, что означает:

не используйте рекурсию
используйте переменные
используйте цикл while*/

/*const smallestDivisor = (num) => {
  if (num <= 0) {
    return NaN;
  }
  let divisor = 2;

  while (divisor <= num) {
    if (num % divisor === 0) {
      return divisor;
    }
    divisor += 1;
  }
  return num;
};*/


// Примеры
smallestDivisor(15); // 3
